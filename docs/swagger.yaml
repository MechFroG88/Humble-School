swagger: "2.0"

info:
  version: '1'
  description: "Chkl school navigation"
  title: "Humble-School"
externalDocs:
  description: "Github"
  url: "https://github.com/MechFroG88/Humble-School/"
host:
  mechfrog88.ddns.net
basePath:
  /api
schemes:
- "http"
- "https"
paths:
  /user:
    post:
      tags:
      - "Users"
      summary: "Create new user"
      parameters:
      - in: "body"
        name: "Body"
        description: "Create new user"
        schema:
          type: "object"
          properties:
            username:
              type: "string"
              example: "admin"
            password:
              type: "string"
              format: "password"
              example: "edrtfyuihgfdtser"

      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

    get:
      tags:
      - "Users"
      summary: "Returns all users data"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                  example: "1"
                username:
                  type: "string"
                  example: "admin"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"
  
  /user/login:
    post:
      tags:
      - "Users"
      summary : "Login"
      parameters:
      - in: "body"
        name: "Body"
        description: "Login user"
        schema:
          type: "object"
          properties:
            username:
              type: "string"
              example: "hello"
            password:
              type: "string"
              example: "asdyughsakjdn"

      responses:
        200:
          description: "Successful logged in"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

  /user/logout:
    post:
      tags:
      - "Users"
      summary : "Logout"
              
      responses:
        200:
          description: "Successful logged out"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"
    delete:
      tags:
      - "Users"
      summary: "Delete user"
      parameters:
      - name: "userId"
        in: "path"
        description: "ID of user to delete"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

  /card:
    post:
      tags:
      - "Cards"
      summary : "Create new card"
      parameters:
      - in: "body"
        name: "Body"
        description: "Create new card"
        schema:
          type: "object"
          properties:
            picture:
              type: "text"
            society:
              type: "string"
              example: "Computer society"
            theme:
              type: "string"
              example: "VR WORLD"
            class:
              type: "string"
              example: "2 HUI"
            detail:
              type: "text"
              example: "ASDANOIFANSLKFANSFLKANF"

      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

    get:
      tags:
      - "Cards"
      summary : "Get all card data"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              picture:
                type: "text"
                example: "asdfghjk/asda"
              theme:
                type: "string"
                example: "VR WORLD"
              class:
                type: "string"
                example: "2hui"
              society:
                type: "string"
                example: "computer society"
              detail:
                type: "text"
                example: "COME HAVE FUN AWHDAHWSDHA"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

  /card/{id}:
    get:
      tags:
      - "Cards"
      summary : "Get single card data"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of card to get"
        required: true

      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              picture:
                type: "text"
                example: "asdfghjk/asda"
              theme:
                type: "string"
                example: "VR WORLD"
              class:
                type: "string"
                example: "2hui"
              society:
                type: "string"
                example: "computer society"
              detail:
                type: "text"
                example: "COME HAVE FUN AWHDAHWSDHA"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"
    put:
      tags: 
      - "Cards"
      summary : "Update single card data"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of card to update"
        required: true
      - in: "body"
        name: "Body"
        description: "Update card data"
        schema:
          type: "object"
          properties:
            theme:
              type: "string"
              example: "VR WORLD"
            society: 
              type: "string"
              example: "computer society"
            detail:
              type: "text"
              example: "awdasasfa"
            picture:
              type: "text"
              example: "sdgasgvs/asdasd"

      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

    delete:
      tags:
      - "Cards"
      summary: "Delete card"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of card to delete"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"

  /class:
    post:
      tags:
      - "Class"
      summary: "Create new class"
      parameters:
      - in: "body"
        name: "Body"
        schema:
          type: "object"
          properties:
            cn_name:
              type: "string"
              example: "2慧"
            en_name:
              type: "string"
              example: "2hui"
            theme:
              type: "string"
              example: "VR WORLD"
            society:
              type: "string"
              example: "computer society"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"


  /class/{id}:
    get:
      tags:
      - "Class"
      summary : "Get single class data"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of class to get"
        required: true

      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              cn_name:
                type: "string"
                example: "2慧"
              en_name:
                type: "string"
                example: "2hui"
              theme:
                type: "string"
                example: "VR WORLD"
              society:
                type: "string"
                example: "computer society"
        401:  
          description: "Unauthorized"
        400:
          description: "Validation Error"

    delete:
      tags:
      - "Class"
      summary: "Delete class"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of class to delete"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"
    
    put:
      tags: 
      - "Class"
      summary: "Update class data"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of class to delete"
        required: true
        type: "integer"     
      - name: "Body"
        in: "body"
        description: "Update class data"
        schema:
          type: "object"
          properties:
            cn_name:
              type: "string"
              example: "2慧"
            en_name:
              type: "string"
              example: "2hui"
            theme:
              type: "string"
              example: "VR WORLD"
            society:
              type: "string"
              example: "computer society"
      
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        400:
          description: "Validation Error"     
